Index: tests/Feature/AuthenticationTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/AuthenticationTest.php b/tests/Feature/AuthenticationTest.php
--- a/tests/Feature/AuthenticationTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/AuthenticationTest.php	(date 1616245445666)
@@ -5,6 +5,7 @@
 use App\Models\User;
 use App\Providers\RouteServiceProvider;
 use Illuminate\Foundation\Testing\RefreshDatabase;
+use Illuminate\Support\Facades\Hash;
 use Tests\TestCase;
 
 class AuthenticationTest extends TestCase
@@ -24,7 +25,7 @@
 
         $response = $this->post('/login', [
             'email' => $user->email,
-            'password' => 'password',
+	        'password' => 'Passw0rd!!',
         ]);
 
         $this->assertAuthenticated();
Index: tests/Feature/UpdatePasswordTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/UpdatePasswordTest.php b/tests/Feature/UpdatePasswordTest.php
--- a/tests/Feature/UpdatePasswordTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/UpdatePasswordTest.php	(date 1616246164082)
@@ -16,12 +16,12 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->put('/user/password', [
-            'current_password' => 'password',
-            'password' => 'new-password',
-            'password_confirmation' => 'new-password',
+            'current_password' => 'Passw0rd!!',
+            'password' => 'new-Passw0rd!!',
+            'password_confirmation' => 'new-Passw0rd!!',
         ]);
 
-        $this->assertTrue(Hash::check('new-password', $user->fresh()->password));
+        $this->assertTrue(Hash::check('new-Passw0rd!!', $user->fresh()->password));
     }
 
     public function test_current_password_must_be_correct()
@@ -29,14 +29,14 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->put('/user/password', [
-            'current_password' => 'wrong-password',
-            'password' => 'new-password',
-            'password_confirmation' => 'new-password',
+            'current_password' => 'wrong-Passw0rd!!',
+            'password' => 'new-Passw0rd!!',
+            'password_confirmation' => 'new-Passw0rd!!',
         ]);
 
         $response->assertSessionHasErrors();
 
-        $this->assertTrue(Hash::check('password', $user->fresh()->password));
+        $this->assertTrue(Hash::check('Passw0rd!!', $user->fresh()->password));
     }
 
     public function test_new_passwords_must_match()
@@ -44,13 +44,13 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->put('/user/password', [
-            'current_password' => 'password',
-            'password' => 'new-password',
-            'password_confirmation' => 'wrong-password',
+            'current_password' => 'Passw0rd!!',
+            'password' => 'new-Passw0rd!!',
+            'password_confirmation' => 'wrong-Passw0rd!!',
         ]);
 
         $response->assertSessionHasErrors();
 
-        $this->assertTrue(Hash::check('password', $user->fresh()->password));
+        $this->assertTrue(Hash::check('Passw0rd!!', $user->fresh()->password));
     }
 }
Index: tests/Feature/ProfileInformationTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/ProfileInformationTest.php b/tests/Feature/ProfileInformationTest.php
--- a/tests/Feature/ProfileInformationTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/ProfileInformationTest.php	(date 1616241958052)
@@ -15,11 +15,14 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->put('/user/profile-information', [
-            'name' => 'Test Name',
-            'email' => 'test@example.com',
+            'firstname' => 'First',
+            'lastname' => 'Last',
+            'username' => 'UserName',
+            'email' => 'test@examples.com',
         ]);
 
-        $this->assertEquals('Test Name', $user->fresh()->name);
-        $this->assertEquals('test@example.com', $user->fresh()->email);
+        $this->assertEquals('First', $user->fresh()->firstname);
+	    $this->assertEquals('Last', $user->fresh()->lastname);
+        $this->assertEquals('test@examples.com', $user->fresh()->email);
     }
 }
Index: tests/Feature/EmailVerificationTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/EmailVerificationTest.php b/tests/Feature/EmailVerificationTest.php
--- a/tests/Feature/EmailVerificationTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/EmailVerificationTest.php	(date 1616244353553)
@@ -8,7 +8,8 @@
 use Illuminate\Foundation\Testing\RefreshDatabase;
 use Illuminate\Support\Facades\Event;
 use Illuminate\Support\Facades\URL;
-use Laravel\Fortify\Features;
+use Laravel\Fortify\Features as FortifyFeatures;
+use Laravel\Jetstream\Features as JetstreamFeatures;
 use Tests\TestCase;
 
 class EmailVerificationTest extends TestCase
@@ -17,13 +18,19 @@
 
     public function test_email_verification_screen_can_be_rendered()
     {
-        if (! Features::enabled(Features::emailVerification())) {
+        if (! FortifyFeatures::enabled(FortifyFeatures::emailVerification())) {
             return $this->markTestSkipped('Email verification not enabled.');
         }
-
-        $user = User::factory()->create([
-            'email_verified_at' => null,
-        ]);
+    
+        if (JetstreamFeatures::enabled(JetstreamFeatures::teams())) {
+            $user = User::factory()->withPersonalTeam()->create([
+                'email_verified_at' => null,
+            ]);
+        } else {
+            $user = User::factory()->create([
+                'email_verified_at' => null,
+            ]);
+        }
 
         $response = $this->actingAs($user)->get('/email/verify');
 
@@ -32,7 +39,7 @@
 
     public function test_email_can_be_verified()
     {
-        if (! Features::enabled(Features::emailVerification())) {
+        if (! FortifyFeatures::enabled(FortifyFeatures::emailVerification())) {
             return $this->markTestSkipped('Email verification not enabled.');
         }
 
@@ -58,7 +65,7 @@
 
     public function test_email_can_not_verified_with_invalid_hash()
     {
-        if (! Features::enabled(Features::emailVerification())) {
+        if (! FortifyFeatures::enabled(FortifyFeatures::emailVerification())) {
             return $this->markTestSkipped('Email verification not enabled.');
         }
 
Index: phpunit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/phpunit.xml b/phpunit.xml
--- a/phpunit.xml	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/phpunit.xml	(date 1616233573750)
@@ -21,8 +21,8 @@
         <server name="APP_ENV" value="testing"/>
         <server name="BCRYPT_ROUNDS" value="4"/>
         <server name="CACHE_DRIVER" value="array"/>
-        <!-- <server name="DB_CONNECTION" value="sqlite"/> -->
-        <!-- <server name="DB_DATABASE" value=":memory:"/> -->
+        <server name="DB_CONNECTION" value="sqlite"/>
+        <server name="DB_DATABASE" value=":memory:"/>
         <server name="MAIL_MAILER" value="array"/>
         <server name="QUEUE_CONNECTION" value="sync"/>
         <server name="SESSION_DRIVER" value="array"/>
Index: tests/Feature/BrowserSessionsTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/BrowserSessionsTest.php b/tests/Feature/BrowserSessionsTest.php
--- a/tests/Feature/BrowserSessionsTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/BrowserSessionsTest.php	(date 1616245445657)
@@ -4,6 +4,7 @@
 
 use App\Models\User;
 use Illuminate\Foundation\Testing\RefreshDatabase;
+use Illuminate\Support\Facades\Hash;
 use Tests\TestCase;
 
 class BrowserSessionsTest extends TestCase
@@ -15,7 +16,7 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->delete('/user/other-browser-sessions', [
-            'password' => 'password',
+            'password' => 'Passw0rd!!',
         ]);
 
         $response->assertSessionHasNoErrors();
Index: tests/Feature/DeleteAccountTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/DeleteAccountTest.php b/tests/Feature/DeleteAccountTest.php
--- a/tests/Feature/DeleteAccountTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/DeleteAccountTest.php	(date 1616245445661)
@@ -4,6 +4,7 @@
 
 use App\Models\User;
 use Illuminate\Foundation\Testing\RefreshDatabase;
+use Illuminate\Support\Facades\Hash;
 use Laravel\Jetstream\Features;
 use Tests\TestCase;
 
@@ -20,7 +21,7 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->delete('/user', [
-            'password' => 'password',
+            'password' => 'Passw0rd!!',
         ]);
 
         $this->assertNull($user->fresh());
@@ -35,7 +36,7 @@
         $this->actingAs($user = User::factory()->create());
 
         $response = $this->delete('/user', [
-            'password' => 'wrong-password',
+            'password' => 'wrong-Passw0rd!!',
         ]);
 
         $this->assertNotNull($user->fresh());
Index: tests/Feature/RegistrationTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/RegistrationTest.php b/tests/Feature/RegistrationTest.php
--- a/tests/Feature/RegistrationTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/RegistrationTest.php	(date 1616244730564)
@@ -4,6 +4,7 @@
 
 use App\Providers\RouteServiceProvider;
 use Illuminate\Foundation\Testing\RefreshDatabase;
+use Illuminate\Support\Facades\Hash;
 use Laravel\Jetstream\Jetstream;
 use Tests\TestCase;
 
@@ -21,10 +22,12 @@
     public function test_new_users_can_register()
     {
         $response = $this->post('/register', [
-            'name' => 'Test User',
+            'firstname' => 'TestFirstName',
+	        'lastname' => 'TestLastName',
+	        'username' => 'TestUserName',
             'email' => 'test@example.com',
-            'password' => 'password',
-            'password_confirmation' => 'password',
+	        'password' => 'NewPassw0rd!!',
+            'password_confirmation' => 'NewPassw0rd!!',
             'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature(),
         ]);
 
Index: tests/Feature/PasswordResetTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/PasswordResetTest.php b/tests/Feature/PasswordResetTest.php
--- a/tests/Feature/PasswordResetTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/PasswordResetTest.php	(date 1616231946122)
@@ -65,8 +65,8 @@
             $response = $this->post('/reset-password', [
                 'token' => $notification->token,
                 'email' => $user->email,
-                'password' => 'password',
-                'password_confirmation' => 'password',
+                'password' => 'Passw0rd!!',
+                'password_confirmation' => 'Passw0rd!!',
             ]);
 
             $response->assertSessionHasNoErrors();
Index: tests/Feature/PasswordConfirmationTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Feature/PasswordConfirmationTest.php b/tests/Feature/PasswordConfirmationTest.php
--- a/tests/Feature/PasswordConfirmationTest.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/tests/Feature/PasswordConfirmationTest.php	(date 1616245445669)
@@ -4,6 +4,7 @@
 
 use App\Models\User;
 use Illuminate\Foundation\Testing\RefreshDatabase;
+use Illuminate\Support\Facades\Hash;
 use Laravel\Jetstream\Features;
 use Tests\TestCase;
 
@@ -27,7 +28,7 @@
         $user = User::factory()->create();
 
         $response = $this->actingAs($user)->post('/user/confirm-password', [
-            'password' => 'password',
+	        'password' => 'Passw0rd!!',
         ]);
 
         $response->assertRedirect();
Index: database/factories/UserFactory.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/database/factories/UserFactory.php b/database/factories/UserFactory.php
--- a/database/factories/UserFactory.php	(revision 44e62626d7ca4a4d78b7ab902286c05e4ff9b968)
+++ b/database/factories/UserFactory.php	(date 1616244353560)
@@ -5,6 +5,7 @@
 use App\Models\Team;
 use App\Models\User;
 use Illuminate\Database\Eloquent\Factories\Factory;
+use Illuminate\Support\Facades\Hash;
 use Illuminate\Support\Str;
 
 class UserFactory extends Factory
@@ -24,10 +25,12 @@
     public function definition()
     {
         return [
-            'name' => $this->faker->name,
+            'firstname' => $this->faker->firstName,
+	        'lastname' => $this->faker->lastName,
+	        'username' => $this->faker->userName,
             'email' => $this->faker->unique()->safeEmail,
             'email_verified_at' => now(),
-            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
+	        'password' => Hash::make('Passw0rd!!'),
             'remember_token' => Str::random(10),
         ];
     }
